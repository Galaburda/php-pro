<?php

namespace Tests\Unit\Users;

use App\Repositories\Users\UserRepository;
use App\Services\Users\UserAuthService;
use App\Services\Users\UserLoginService;
use PHPUnit\Framework\TestCase;

class UserLoginNotValidDataTest extends TestCase
{
    protected UserLoginService $service;
    protected UserRepository $userRepository;
    protected UserAuthService $authService;
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->userRepository = $this->createMock(UserRepository::class);
        $this->authService = $this->createMock(UserAuthService::class);
        $this->service = new UserLoginService(
            $this->userRepository,
            $this->authService,
        );
    }

    public function testNotValidLogin(): void
    {
        $userId = 1;

        $this->authService
            ->expects(self::once())
            ->method('isCorrectUserData')
            ->with([])
            ->willReturn(false);

        $this->authService
            ->expects(self::never())
            ->method('getUserId');

        $this->userRepository
            ->expects(self::never())
            ->method('getById')
            ->with($userId);

        $result = $this->service->login([]);
        $this->assertSame(null, $result);
    }
}
